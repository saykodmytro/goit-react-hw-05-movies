{"version":3,"file":"static/js/493.28a5362e.chunk.js","mappings":"0OAwDA,UAlDa,WACX,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACRE,GAA4BC,EAAAA,EAAAA,WAAS,GAAMC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAApCI,EAAMF,EAAA,GAAEG,EAASH,EAAA,GACxBI,GAAmCL,EAAAA,EAAAA,UAAS,IAAGM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAAxCE,EAASD,EAAA,GAAEE,EAAaF,EAAA,GAC/BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAkBtB,OAhBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,eAAAC,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAEE,OAFFF,EAAAC,KAAA,EAEdjB,GAAU,GAAMgB,EAAAE,KAAA,GACGC,EAAAA,EAAAA,IAAgB1B,GAAS,KAAD,EAArCsB,EAAIC,EAAAI,KACVhB,EAAcW,EAAKM,KAAKC,MAAMN,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAO,GAAAP,EAAA,SAE9BQ,QAAQC,IAAGT,EAAAO,IACXf,EAASQ,EAAAO,GAAMG,SAAS,QAEP,OAFOV,EAAAC,KAAA,GAExBjB,GAAU,GAAOgB,EAAAW,OAAA,6BAAAX,EAAAY,OAAA,GAAAd,EAAA,wBAEpB,kBAXc,OAAAH,EAAAkB,MAAA,KAAAC,UAAA,KAYfpB,GACF,GAAG,CAACjB,IAEwB,IAArBU,EAAU4B,QACfC,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAC,mDAI3BC,EAAAA,EAAAA,MAAA,OAAAD,SAAA,CACGnC,IAAUiC,EAAAA,EAAAA,KAACI,EAAAA,EAAM,IACP,OAAV7B,IAAkByB,EAAAA,EAAAA,KAAA,KAAGC,UAAU,aAAYC,SAAE3B,KAC9CyB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,kBAAiBC,SACP,IAArB/B,EAAU4B,QACT5B,EAAUkC,KACR,SAAAC,GAAA,IAAGC,EAAOD,EAAPC,QAASC,EAAaF,EAAbE,cAAeC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aAAY,OAChDP,EAAAA,EAAAA,MAAA,MAAkBF,UAAU,aAAYC,SAAA,EACtCF,EAAAA,EAAAA,KAAA,OACEW,IAAKD,EAAY,GAAAE,OAAMC,EAAAA,GAAMD,OAAGF,GAAiBI,EAAAA,EACjDC,IAAKP,EACLQ,MAAM,SAERhB,EAAAA,EAAAA,KAAA,MAAIC,UAAU,aAAYC,SAAEM,KAC5BL,EAAAA,EAAAA,MAAA,KAAGF,UAAU,kBAAiBC,SAAA,CAAC,cAAYO,OAPpCF,EAQJ,QAMnB,C","sources":["pages/Cast.jsx"],"sourcesContent":["import { getMovieCredits } from 'api/themoviedb-api';\nimport Loader from 'components/Loader/Loader';\nimport React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { defaultImg, imgUrl } from 'utils/const';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [loader, setLoader] = useState(false);\n  const [movieCast, setMoviesCast] = useState([]);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setLoader(true);\n        const resp = await getMovieCredits(movieId);\n        setMoviesCast(resp.data.cast);\n      } catch (error) {\n        console.log(error);\n        setError(error.message);\n      } finally {\n        setLoader(false);\n      }\n    };\n    fetchData();\n  }, [movieId]);\n\n  return movieCast.length === 0 ? (\n    <h3 className=\"no-reviews\">\n      Sorry, but there are no casts for this movie!\n    </h3>\n  ) : (\n    <div>\n      {loader && <Loader />}\n      {error !== null && <p className=\"error-bage\">{error}</p>}\n      <ul className=\"list-casts list\">\n        {movieCast.length !== 0 &&\n          movieCast.map(\n            ({ cast_id, original_name, character, profile_path }) => (\n              <li key={cast_id} className=\"item-casts\">\n                <img\n                  src={profile_path ? `${imgUrl}${profile_path}` : defaultImg}\n                  alt={original_name}\n                  width=\"250\"\n                />\n                <h3 className=\"casts-name\">{original_name}</h3>\n                <p className=\"casts-character\">Character: {character}</p>\n              </li>\n            )\n          )}\n      </ul>\n    </div>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","loader","setLoader","_useState3","_useState4","movieCast","setMoviesCast","_useState5","_useState6","error","setError","useEffect","fetchData","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","resp","_context","prev","next","getMovieCredits","sent","data","cast","t0","console","log","message","finish","stop","apply","arguments","length","_jsx","className","children","_jsxs","Loader","map","_ref2","cast_id","original_name","character","profile_path","src","concat","imgUrl","defaultImg","alt","width"],"sourceRoot":""}